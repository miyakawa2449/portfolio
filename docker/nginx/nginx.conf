user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # サーバー情報秘匿
    server_tokens off;
    more_set_headers "Server: ";
    
    # ログフォーマット
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # 基本設定
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    
    # Gzip圧縮
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # WWWサブドメインリダイレクト（HTTP）
    server {
        listen 80;
        server_name www.miyakawa.codes;
        return 301 https://miyakawa.codes$request_uri;
    }
    
    # HTTPからHTTPSリダイレクト
    server {
        listen 80;
        server_name miyakawa.codes;
        return 301 https://miyakawa.codes$request_uri;
    }
    
    # WWWサブドメインリダイレクト（HTTPS）
    server {
        listen 443 ssl http2;
        server_name www.miyakawa.codes;
        
        # SSL証明書（Let's Encryptで取得予定）
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        
        return 301 https://miyakawa.codes$request_uri;
    }
    
    # メインHTTPSサーバー
    server {
        listen 443 ssl http2;
        server_name miyakawa.codes;
        
        # SSL証明書（Let's Encryptで取得予定）
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        
        # SSL設定
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # セキュリティヘッダー
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # カスタムエラーページ
        error_page 403 /error/403.html;
        error_page 404 /error/404.html;
        error_page 503 504 /error/5xx.html;
        
        # Favicon配信
        location = /favicon.ico {
            alias /var/www/static/favicon.ico;
            expires 7d;
            add_header Cache-Control "public";
            access_log off;
        }
        
        # 静的ファイルの配信
        location /static/ {
            alias /var/www/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        # エラーページの配信
        location /error/ {
            alias /var/www/error/;
            internal;
        }
        
        # Flaskアプリケーションへのプロキシ
        location / {
            proxy_pass http://web:5001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
        }
    }
}